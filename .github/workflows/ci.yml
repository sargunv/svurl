name: Rust

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: Swatinem/rust-cache@v1
        with:
          cache-on-failure: true
      - run: cargo test

  build:
    needs: [ check ]
    strategy:
      fail-fast: false
      matrix:
        include:
          - artifact: debian-amd64
            runs-on: ubuntu-latest
            toolchain: nightly
            target: x86_64-unknown-linux-gnu
          - artifact: debian-armv7
            runs-on: ubuntu-latest
            toolchain: nightly
            target: armv7-unknown-linux-gnueabihf
            apt-install: gcc-arm-linux-gnueabihf
    runs-on: ${{ matrix.runs-on }}
    steps:
      - uses: actions/checkout@v2
      - run: sudo apt-get update && sudo apt-get install -y ${{ matrix.apt-install }}
        if: ${{ matrix.apt-install }}
      - uses: Swatinem/rust-cache@v1
        with:
          cache-on-failure: true
          key: ${{ matrix.target }}
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.toolchain }}
          target: ${{ matrix.target }}
      - run: cargo install cargo-deb
      - run: cargo deb --target ${{ matrix.target }}
      - uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.artifact }}
          path: ./target/${{ matrix.target }}/debian/*.deb
          if-no-files-found: error
  
  release:
    if: ${{ github.ref == 'refs/heads/main' }}
    needs: [ build ]
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: thebongy/version-check@v1
        with:
          file: Cargo.toml
          failBuild: true
        id: version_check
      - uses: actions/download-artifact@v2
        with:
          path: _artifacts
      - uses: ncipollo/release-action@v1.8.10
        with:
          allowUpdates: false
          artifacts: _artifacts/*/*.deb
          tag: ${{ steps.version_check.outputs.rawVersion }}
          token: ${{ secrets.GITHUB_TOKEN }}
          commit: ${{ github.sha }}
      - uses: lpenz/ghaction-packagecloud@v0.3
        with:
          repository: public/any/any
        env:
          PACKAGECLOUD_TOKEN: ${{ secrets.PACKAGECLOUD_TOKEN }}
